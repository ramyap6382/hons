import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score

# Load dataset
# Replace 'weather_data.csv' with the path to your dataset
df = pd.read_csv('weather_data.csv')

# Inspect the dataset to identify relevant columns
print(df.head())

# Assuming the dataset has 'MaxTemperature' and 'MinTemperature' columns
# Replace column names as necessary
df = df[['MaxTemperature', 'MinTemperature']].dropna()

# Features (X) and target (y)
X = df[['MinTemperature']]  # Independent variable
y = df['MaxTemperature']    # Dependent variable

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluate the model
r2 = r2_score(y_test, y_pred)
print(f"R² Score: {r2:.2f}")

# Plotting
plt.figure(figsize=(10, 6))
# Scatter plot
plt.scatter(X, y, color='blue', alpha=0.6, label='Actual data')

# Regression line
X_sorted = X.sort_values(by='MinTemperature')  # Sort for a smooth line
y_pred_all = model.predict(X_sorted)  # Predict using sorted X
plt.plot(X_sorted, y_pred_all, color='red', label='Regression Line')

# Labels and title
plt.xlabel('Minimum Temperature (°C)')
plt.ylabel('Maximum Temperature (°C)')
plt.title('Linear Regression: Max vs Min Temperature')
plt.legend()
plt.grid()
plt.show()
