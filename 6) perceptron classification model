import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import Perceptron
from sklearn.metrics import classification_report, accuracy_score

# Sample dataset (replace this with actual data)
# Binary classification example
data = {
    'feature1': [2.5, 3.6, 1.2, 4.8, 3.3, 2.7, 1.1, 5.0, 4.4, 2.9],
    'feature2': [1.8, 2.9, 0.8, 3.5, 3.0, 2.2, 1.0, 3.7, 3.2, 2.5],
    'label': [0, 1, 0, 1, 1, 0, 0, 1, 1, 0]
}
df = pd.DataFrame(data)

# Features (X) and target (y)
X = df[['feature1', 'feature2']]
y = df['label']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardizing features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Building the Perceptron model
model = Perceptron(max_iter=1000, eta0=0.01, random_state=42)
model.fit(X_train_scaled, y_train)

# Predictions
y_pred = model.predict(X_test_scaled)

# Evaluation
print("Classification Report:")
print(classification_report(y_test, y_pred))

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")
