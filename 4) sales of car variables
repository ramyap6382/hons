import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import OneHotEncoder

# Sample dataset
data = {
    'price': [20000, 30000, 15000, 40000, 10000, 25000],
    'model': ['sedan', 'SUV', 'hatchback', 'sedan', 'hatchback', 'SUV'],
    'sales': [120, 80, 150, 90, 200, 100]
}
df = pd.DataFrame(data)

# Encode categorical variable (model)
encoder = OneHotEncoder(sparse_output=False)  # Use sparse_output=False for a dense array
model_encoded = encoder.fit_transform(df[['model']])
model_encoded_df = pd.DataFrame(model_encoded, columns=encoder.get_feature_names_out(['model']))

# Prepare features (price + encoded model) and target (sales)
X = pd.concat([df[['price']], model_encoded_df], axis=1)
y = df['sales']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions and evaluation
y_pred = model.predict(X_test)
print(f"Mean Squared Error: {mean_squared_error(y_test, y_pred):.2f}")
print(f"R^2 Score: {r2_score(y_test, y_pred):.2f}")
