import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Sample dataset
data = {
    'product_rate': [4.5, 4.0, 3.0, 4.8, 3.5, 4.2, 2.8, 4.6, 3.9, 5.0],
    'customer_satisfaction': [85, 80, 70, 90, 75, 82, 68, 88, 79, 92],
    'customers': [150, 140, 100, 160, 110, 145, 95, 155, 135, 170]
}
df = pd.DataFrame(data)

# Features (X) and Target (y)
X = df[['product_rate', 'customer_satisfaction']]
y = df['customers']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
print(f"Mean Squared Error: {mean_squared_error(y_test, y_pred):.2f}")
print(f"R^2 Score: {r2_score(y_test, y_pred):.2f}")

# Display results
results = pd.DataFrame({
    'Actual': y_test,
    'Predicted': y_pred
}).reset_index(drop=True)
print("\nPredicted vs Actual:\n", results)
